<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Quotation_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get quotation by id
     */
    function get_quotation($id)
    {
        return $this->db->get_where('quotation',array('id'=>$id))->row_array();
    }

    function get_items($id){


        $this->db->select('quotation_no')
         ->from('quotation')
         ->where('id',$id);
        $res=$this->db->get()->row()->quotation_no;
        //$arr=explode(" ",$res);

        //$q_no=$res[0];


        return $this->db->get_where('item_service_list',array('quotation_no'=>$res))->result_array();

    }


    /*
     * function to add new invoice
     */
    function add_invoice($params)
    {
        $this->db->insert('invoice',$params);
        return $this->db->insert_id();
    }

    function get_last_q_no(){


        $this->db->select('quotation_no')
         ->from('quotation where id=(select max(id) from quotation)');
        $res=$this->db->get()->row()->quotation_no;
        //$arr=explode(" ",$res);

        //$q_no=$res[0];


        return $res;

    }


    function get_last_invoice_no(){

         $this->db->select('invoice_no')
         ->from('invoice')
         ->where('id IN (select max(id) from invoice)');
        return $this->db->get()->row()->invoice_no;

    }
	
	function get_last_trans_no(){

         $this->db->select('transaction_no')
         ->from('invoice')
         ->where('id IN (select max(id) from invoice)');
        return $this->db->get()->row();

    }


    function get_quotation_no()
    {
        
         $this->db->select('quotation_no')
         ->from('quotation')
         ->where('approval_status NOT IN ("Approved")')
         ->order_by('id', 'desc');
        return $this->db->get()->result_array();
    }
        
    /*
     * Get all quotation
     */
    function get_all_quotation()
    {
        /*$this->db->order_by('id', 'desc');
        $this->db->select('quotation.id, quotation.quotation_no,quotation.quote_date,quotation.customer_name,quotation.quotation_amount')
         ->from('quotation');
          $this->db->distinct();
        return $this->db->get()->result_array();
        */
        //$this->db->order_by('id', 'desc');
        


        // $this->db->select('quotation.id, quotation.quotation_no,quotation.quote_date,quotation.customer_name, quotation.mob_no, quotation.email,(select sum(total) from item_service_list where item_service_list.quotation_no=quotation.quotation_no) as total')
        //  ->from('quotation')
        //   ->join('item_service_list', 'item_service_list.quotation_no=quotation.quotation_no','left');
        //   $this->db->distinct();
        // return $this->db->get()->result_array();
        $this->db->select('quotation.id, quotation.quotation_no,quotation.quote_date,quotation.customer_name, quotation.mob_no, quotation.email,quotation.quotation_amount, (select sum(total) from item_service_list where item_service_list.quotation_no=quotation.quotation_no) as total, (select goods_service_desc from item_service_list where item_service_list.quotation_no=quotation.quotation_no and sl_no=1) as description ')
         ->from('quotation')
         ->join('item_service_list', 'item_service_list.quotation_no=quotation.quotation_no','left')
		->where('quotation.invoice_generated !="yes" order by id desc');
        return $this->db->get()->result_array();


    }
	
	 function get_cancel_quotation()
	 {
		 
	 	$this->db->select('quotation.id, quotation.quotation_no,quotation.quote_date,quotation.customer_name, quotation.mob_no, quotation.email,quotation.quotation_amount,quotation.customer_remarks, quotation.approval_date, (select sum(total) from item_service_list where item_service_list.quotation_no=quotation.quotation_no) as total, (select goods_service_desc from item_service_list where item_service_list.quotation_no=quotation.quotation_no and sl_no=1) as description ')
         ->from('quotation')
            ->where('approval_status="Disapproved"')
            ->order_by('id', 'desc');
        return $this->db->get()->result_array();
	 }
	


    /*
     * Get quotation for print
     */
    function get_quotation_print($quotation_no)
    {
       
        $this->db->select('*')
         ->from('quotation')
            ->where('quotation_no',$quotation_no);
        return $this->db->get()->row_array();


    }

    /*
     * Get quotation for print
     */
    function get_quotation_Approval_print($quotation_no)
    {
       
        $this->db->select('*')
         ->from('quotation')
            ->where('quotation_no',$quotation_no);
        return $this->db->get()->row_array();


    }

    
    /*
     * Get quotation for print
     */
    function get_item_print($quotation_no)
    {
       

        return $this->db->get_where('item_service_list',array('quotation_no'=>$quotation_no))
        ->result_array();


    }

    

    /*
     * Get Approved all quotation
     */
    function get_approved_quotation()
    {
        //$this->db->order_by('id', 'desc');
        $this->db->select('quotation.id,quotation.quotation_no,quotation.approval_date,quotation.approval_status,quotation.payment_for,quotation.invoice_generated,(select sum(total) from item_service_list where item_service_list.quotation_no=quotation.quotation_no) as total, (select goods_service_desc from item_service_list where item_service_list.quotation_no=quotation.quotation_no and sl_no=1) as description')
        ->from('quotation')
        ->where('approval_status IN ("Approved","Disapproved")')
         ->order_by('id', 'desc');
        return $this->db->get()->result_array();
    }



    function total_received_amount(){
        $this->db->select('quotation.id, quotation.quotation_no,quotation.quote_date,quotation.transaction_no, quotation.payment_for, quotation.payment_mode,invoice.invoice_no,(select sum(total) from item_service_list where item_service_list.quotation_no=quotation.quotation_no) as total')
         ->from('invoice')
          ->join('item_service_list', 'item_service_list.quotation_no=quotation.quotation_no','left');
          $this->db->distinct();
        return $this->db->get('quotation')->result_array();
        
    }

    function date_to_date_total_received_amount($params){
        // $this->db->select('quotation.id, quotation.quotation_no,quotation.quote_date,quotation.transaction_no, quotation.payment_for, quotation.payment_mode,invoice.invoice_no,(select sum(total) from item_service_list where item_service_list.quotation_no=quotation.quotation_no) as total')
        //  ->from('invoice')
        //   ->join('item_service_list', 'item_service_list.quotation_no=quotation.quotation_no','left');
        //   $this->db->distinct();
        // return $this->db->get('quotation')->result_array();
        $this->db->select('quotation.id, quotation.quotation_no, quotation.quote_date,quotation.transaction_no,invoice.invoice_no,invoice.invoice_date, quotation.payment_for, quotation.payment_mode, quotation.transaction_details,(select sum(total) from item_service_list where item_service_list.quotation_no=invoice.quotation_no) as total')
        ->where('quote_date BETWEEN "'. date('Y-m-d', strtotime($params['from_date'])). '" and "'. date('Y-m-d', strtotime($params['to_date'])).'"')
        ->from('quotation')
        ->join('invoice', 'quotation.quotation_no = invoice.quotation_no','left')
        ->join('item_service_list', 'item_service_list.quotation_no=quotation.quotation_no','left');
        return $this->db->get()->result_array();
    }

    /*
    * get last quotation to genertae quotation No
    */

    
    function get_last_quotation()
    {
         $this->db->select('quotation_no')
         ->from('quotation where id=(select max(id) from quotation)');
        return $this->db->get()->row();
    }
        
    /*
     * function to add new quotation
     */
    function add_quotation($params)
    {
        $this->db->insert('quotation',$params);
        return $this->db->insert_id();
    }

    /*
     * function to add quotation Approval
     */
    function add_quotation_approval($quotation_no, $params)
    {
        $this->db->where('quotation_no',$quotation_no);
        return $this->db->update('quotation',$params);
    }


    /*
     * function to Update quotation Approval
     */
    function update_quotation_approval($quotation_no, $params)
    {
        $this->db->where('quotation_no',$quotation_no);
        return $this->db->update('quotation',$params);
    }

    /*
     * function to add new quotation
     */
    function add_items($params)
    {
        $this->db->insert('item_service_list',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update quotation
     */
    function update_quotation($quotation_no,$params)
    {
        $this->db->where('quotation_no',$quotation_no);
        return $this->db->update('quotation',$params);
    }


    /*
     * function to update Items
     */
    function update_item($quotation_no,$params)
    {
        $this->db->where('quotation_no',$quotation_no);
        return $this->db->update('item_service_list',$params);
    }


    
    /*
     * function to delete quotation
     */
    function delete_quotation($id)
    {
        return $this->db->delete('quotation',array('id'=>$id));
    }
}
