<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Inventory_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    // /*
    //  * Get invoice by id
    //  */
    function get_inventory($id)
    {
        return $this->db->get_where('inventory',array('id'=>$id))->row_array();
    }
        
    // /*
    //  * Get all invoice
    //  */
    function get_all_inventory()
    {
        //$this->db->order_by('id', 'desc');
         $this->db->select('*')
         ->from('inventory');
        $this->db->distinct();
        return $this->db->get()->result_array();
    }

    // /*
    //  * Get all invoice
    //  */
     
    // function get_quotation($quotation_no)
    // {
        
    //         return $this->db->get_where('quotation',array('quotation_no'=>$quotation_no))->row_array();
        
        
    // }


    // function get_items($quotation_no){


    //     return $this->db->get_where('item_service_list',array('quotation_no'=>$quotation_no))->result_array();

    // } 

    // function get_invoice_no(){

    //      $this->db->select('invoice_no')
    //      ->from('invoice')
    //      ->where('id IN (select max(id) from invoice)');
    //     return $this->db->get()->row()->invoice_no;

    // } 
    // /*
    //  * Get all quotation invoice
    //  */
    // function get_quotation_no()
    // {
        
    //      $this->db->select('quotation_no')
    //      ->from('quotation')
    //      ->where('approval_status IN ("Approved") AND invoice_generated=""')
    //      ->order_by('id', 'desc');
    //     return $this->db->get()->result_array();
    // }
        
    /*
     * function to add new invoice
     */
    function add_invoice($params)
    {
        $this->db->insert('inventory',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update invoice
     */
    function update_inventory($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('inventory',$params);
    }
    
     /*
     * function to update invoice flag
     */
    // function  update_invoice_flag($quotation_no,$params)
    // {
    //     $this->db->where('quotation_no',$quotation_no);

    //     return $this->db->update('quotation',$params);
    // }
   function count_all_rate(){
        $this->db->select('sum(rate) as total_rate')
         ->from('inventory');
        return $this->db->get()->result_array();
   }
   function count_all_amount(){
        $this->db->select('sum(amount) as total_amount')
         ->from('inventory');
        return $this->db->get()->result_array();
   }
    /*
     * function to delete invoice
     */
    function delete_invoice($id)
    {
        return $this->db->delete('invoice',array('id'=>$id));
    }
    
    // function get_all_due_invoice()
    // {
    //     //$this->db->order_by('id', 'desc');
    //      $this->db->select('invoice.id, invoice.quotation_no, invoice.invoice_no,invoice.invoice_date,quotation.customer_name,quotation.mob_no,quotation.email,(select sum(total) from item_service_list where item_service_list.quotation_no=invoice.quotation_no) as total')
    //      ->where('quotation.approval_status', 'Disapproved')
    //      ->from('invoice')
    //      ->join('quotation', 'invoice.quotation_no = quotation.quotation_no','left')
    //       ->join('item_service_list', 'item_service_list.quotation_no=quotation.quotation_no','left');
    //        $this->db->distinct();
    //     return $this->db->get()->result_array();
    // }
    
    //  function get_quotation_from_date($params)
    // {
    //     // $this->db->where('quote_date >=', $params['from_date']);
    //     // $this->db->where('quote_date <=', $params['to_date']);
    //     // return $this->db->get('quotation');
    //     $this->db->select('quotation.id, quotation.quotation_no, quotation.quote_date,quotation.customer_name,quotation.mob_no,quotation.email,(select sum(total) from item_service_list where item_service_list.quotation_no=invoice.quotation_no) as total')
    //     ->where('quote_date BETWEEN "'. date('Y-m-d', strtotime($params['from_date'])). '" and "'. date('Y-m-d', strtotime($params['to_date'])).'"')
    //     ->from('quotation')
    //     ->join('invoice', 'quotation.quotation_no = invoice.quotation_no','left')
    //     ->join('item_service_list', 'item_service_list.quotation_no=quotation.quotation_no','left');
    //     return $this->db->get()->result_array();

    // }
    // function get_invoice_from_date($params)
    // {
    //     // $this->db->where('quote_date >=', $params['from_date']);
    //     // $this->db->where('quote_date <=', $params['to_date']);
    //     // return $this->db->get('quotation');
    //     $this->db->select('invoice.id, invoice.invoice_no, invoice.invoice_date,quotation.customer_name,quotation.mob_no,quotation.email,(select sum(total) from item_service_list where item_service_list.quotation_no=invoice.quotation_no) as total')
    //     ->where('invoice_date BETWEEN "'. date('Y-m-d', strtotime($params['from_date'])). '" and "'. date('Y-m-d', strtotime($params['to_date'])).'"')
    //     ->from('invoice')
    //     ->join('quotation', 'invoice.quotation_no = quotation.quotation_no','left')
    //     ->join('item_service_list', 'item_service_list.quotation_no=quotation.quotation_no','left');
    //     return $this->db->get()->result_array();

    // }


    // /*
    //  * Get quotation for print
    //  */
    // function get_quotation_print($quotation_no)
    // {
       
    //     $this->db->select('*')
    //      ->from('quotation')
    //         ->where('quotation_no',$quotation_no);
    //     return $this->db->get()->row_array();


    // }

    

    
    // /*
    //  * Get quotation for print
    //  */
    // function get_item_print($quotation_no)
    // {
       

    //     return $this->db->get_where('item_service_list',array('quotation_no'=>$quotation_no))
    //     ->result_array();


    // }

    // /*
    //  * Get quotation for print
    //  */
    // function get_invoice_detail($quotation_no)
    // {
       

    //     $this->db->select('*')
    //      ->from('invoice')
    //         ->where('quotation_no',$quotation_no);
    //     return $this->db->get()->row_array();


    // }

}
