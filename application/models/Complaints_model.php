<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Complaints_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get complaints by id
     */
    function get_complaints($id)
    {
        return $this->db->get_where('complaints',array('id'=>$id))->row_array();
    }

    function get_items($id){


        $this->db->select('complaint_no')
         ->from('complaints')
         ->where('id',$id);
        $res=$this->db->get()->row()->complaint_no;
        //$arr=explode(" ",$res);

        //$q_no=$res[0];


        return $this->db->get_where('item_service_list',array('complaint_no'=>$res))->result_array();

    }


    /*
     * function to add new invoice
     */
    function add_invoice($params)
    {
        $this->db->insert('invoice',$params);
        return $this->db->insert_id();
    }

    function get_last_q_no(){


        $this->db->select('complaint_no')
         ->from('complaints where id=(select max(id) from complaints)');
        $res=$this->db->get()->row()->complaint_no;
        //$arr=explode(" ",$res);

        //$q_no=$res[0];


        return $res;

    }


    function get_last_invoice_no(){

         $this->db->select('invoice_no')
         ->from('invoice')
         ->where('id IN (select max(id) from invoice)');
        return $this->db->get()->row()->invoice_no;

    }
	
	function get_last_trans_no(){

         $this->db->select('transaction_no')
         ->from('invoice')
         ->where('id IN (select max(id) from invoice)');
        return $this->db->get()->row();

    }


    function get_complaint_no()
    {
        
         $this->db->select('complaint_no')
         ->from('complaints')
         ->where('approval_status NOT IN ("Approved")')
         ->order_by('id', 'desc');
        return $this->db->get()->result_array();
    }
        
    /*
     * Get all complaints
     */
    function get_all_complaints()
    {
        /*$this->db->order_by('id', 'desc');
        $this->db->select('complaints.id, complaints.complaint_no,complaints.quote_date,complaints.customer_name,complaints.complaints_amount')
         ->from('complaints');
          $this->db->distinct();
        return $this->db->get()->result_array();
        */
        //$this->db->order_by('id', 'desc');
        


        // $this->db->select('complaints.id, complaints.complaint_no,complaints.quote_date,complaints.customer_name, complaints.mob_no, complaints.email,(select sum(total) from item_service_list where item_service_list.complaint_no=complaints.complaint_no) as total')
        //  ->from('complaints')
        //   ->join('item_service_list', 'item_service_list.complaint_no=complaints.complaint_no','left');
        //   $this->db->distinct();
        // return $this->db->get()->result_array();
        $this->db->select('*')
         ->from('complaints');
        //  ->join('item_service_list', 'item_service_list.complaint_no=complaints.complaint_no','left')
		// ->where('complaints.invoice_generated !="yes" order by id desc');
        return $this->db->get()->result_array();


    }
	
	 function get_cancel_complaints()
	 {
		 
	 	$this->db->select('complaints.id, complaints.complaint_no,complaints.quote_date,complaints.customer_name, complaints.mob_no, complaints.email,complaints.complaints_amount,complaints.customer_remarks, complaints.approval_date, (select sum(total) from item_service_list where item_service_list.complaint_no=complaints.complaint_no) as total, (select goods_service_desc from item_service_list where item_service_list.complaint_no=complaints.complaint_no and sl_no=1) as description ')
         ->from('complaints')
            ->where('approval_status="Disapproved"')
            ->order_by('id', 'desc');
        return $this->db->get()->result_array();
	 }
	


    /*
     * Get complaints for print
     */
    function get_complaints_print($complaint_no)
    {
       
        $this->db->select('*')
         ->from('complaints')
            ->where('complaint_no',$complaint_no);
        return $this->db->get()->row_array();


    }

    /*
     * Get complaints for print
     */
    function get_complaints_Approval_print($complaint_no)
    {
       
        $this->db->select('*')
         ->from('complaints')
            ->where('complaint_no',$complaint_no);
        return $this->db->get()->row_array();


    }

    
    /*
     * Get complaints for print
     */
    function get_item_print($complaint_no)
    {
       

        return $this->db->get_where('item_service_list',array('complaint_no'=>$complaint_no))
        ->result_array();


    }

    

    /*
     * Get Approved all complaints
     */
    function get_approved_complaints()
    {
        //$this->db->order_by('id', 'desc');
        $this->db->select('complaints.id,complaints.complaint_no,complaints.approval_date,complaints.approval_status,complaints.payment_for,complaints.invoice_generated,(select sum(total) from item_service_list where item_service_list.complaint_no=complaints.complaint_no) as total, (select goods_service_desc from item_service_list where item_service_list.complaint_no=complaints.complaint_no and sl_no=1) as description')
        ->from('complaints')
        ->where('approval_status IN ("Approved","Disapproved")')
         ->order_by('id', 'desc');
        return $this->db->get()->result_array();
    }



    function total_received_amount(){
        $this->db->select('complaints.id, complaints.complaint_no,complaints.quote_date,complaints.transaction_no, complaints.payment_for, complaints.payment_mode,invoice.invoice_no,(select sum(total) from item_service_list where item_service_list.complaint_no=complaints.complaint_no) as total')
         ->from('invoice')
          ->join('item_service_list', 'item_service_list.complaint_no=complaints.complaint_no','left');
          $this->db->distinct();
        return $this->db->get('complaints')->result_array();
        
    }

    function date_to_date_total_received_amount($params){
        // $this->db->select('complaints.id, complaints.complaint_no,complaints.quote_date,complaints.transaction_no, complaints.payment_for, complaints.payment_mode,invoice.invoice_no,(select sum(total) from item_service_list where item_service_list.complaint_no=complaints.complaint_no) as total')
        //  ->from('invoice')
        //   ->join('item_service_list', 'item_service_list.complaint_no=complaints.complaint_no','left');
        //   $this->db->distinct();
        // return $this->db->get('complaints')->result_array();
        $this->db->select('complaints.id, complaints.complaint_no, complaints.quote_date,complaints.transaction_no,invoice.invoice_no,invoice.invoice_date, complaints.payment_for, complaints.payment_mode, complaints.transaction_details,(select sum(total) from item_service_list where item_service_list.complaint_no=invoice.complaint_no) as total')
        ->where('quote_date BETWEEN "'. date('Y-m-d', strtotime($params['from_date'])). '" and "'. date('Y-m-d', strtotime($params['to_date'])).'"')
        ->from('complaints')
        ->join('invoice', 'complaints.complaint_no = invoice.complaint_no','left')
        ->join('item_service_list', 'item_service_list.complaint_no=complaints.complaint_no','left');
        return $this->db->get()->result_array();
    }

    /*
    * get last complaints to genertae complaints No
    */

    
    function get_last_complaints()
    {
         $this->db->select('complaint_no')
         ->from('complaints where id=(select max(id) from complaints)');
        return $this->db->get()->row();
    }
        
    /*
     * function to add new complaints
     */
    function add_complaints($params)
    {
        $this->db->insert('complaints',$params);
        return $this->db->insert_id();
    }

    /*
     * function to add complaints Approval
     */
    function add_complaints_approval($complaint_no, $params)
    {
        $this->db->where('complaint_no',$complaint_no);
        return $this->db->update('complaints',$params);
    }


    /*
     * function to Update complaints Approval
     */
    function update_complaints_approval($complaint_no, $params)
    {
        $this->db->where('complaint_no',$complaint_no);
        return $this->db->update('complaints',$params);
    }

    /*
     * function to add new complaints
     */
    function add_items($params)
    {
        $this->db->insert('item_service_list',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update complaints
     */
    function update_complaints($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('complaints',$params);
    }


    /*
     * function to update Items
     */
    function update_item($complaint_no,$params)
    {
        $this->db->where('complaint_no',$complaint_no);
        return $this->db->update('item_service_list',$params);
    }


    
    /*
     * function to delete complaints
     */
    function delete_complaints($id)
    {
        return $this->db->delete('complaints',array('id'=>$id));
    }
}
