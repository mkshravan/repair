    <?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Complaints extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('complaints_model');
        $this->load->library('session');
        $this->isUserLoggedIn = $this->session->userdata('isUserLoggedIn');
    } 

    /*
     * Listing of complaints
     */

    function index()
    {
        if($this->isUserLoggedIn){ 
            $data['complaints'] = $this->complaints_model->get_all_complaints();        
            $data['_view'] = 'complaints/index';
            $this->load->view('layouts/main', $data);
        }else{
            redirect('admin/'); 
        }

        
    }

    function printcomplaints($complaints_no)
    {
        if($this->isUserLoggedIn){ 
            $data['complaints'] = $this->complaints_model->get_complaints_print($complaints_no);
            $data['item'] = $this->complaints_model->get_item_print($complaints_no);
            $data['_view'] = 'complaints/printcomplaints';
            $this->load->view('layouts/mainprint',$data);
        }else{
            redirect('admin/'); 
        }

        
    }

    function printcomplaintsApproval($complaints_no)
    {
        if($this->isUserLoggedIn){ 
            $data['complaints'] = $this->complaints_model->get_complaints_Approval_print($complaints_no);
         $data['item'] = $this->complaints_model->get_item_print($complaints_no);
        $data['_view'] = 'complaints/printcomplaintsApproval';
        $this->load->view('layouts/mainprint',$data);
        }else{
            redirect('admin/'); 
        }
        
    }

    function complaintsApprovalList()
    {
        if($this->isUserLoggedIn){ 
            $data['complaints'] = $this->complaints_model->get_approved_complaints();
        
        $data['_view'] = 'complaints/approvalList';
        $this->load->view('layouts/main',$data);
        }else{
            redirect('admin/'); 
        }
        
    }



    /* 
     * Adding a new complaints
     */

   /* function addcomplaints(){

       $postData = $this->input->post("company_gst");
        


    }*/
    function add()
    {   
        if($this->isUserLoggedIn){ 
        $username = $this->session->userdata('username');
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'complaint_no' => $this->input->post('complaint_no'),
				'complain_entry_date' => $this->input->post('complain_entry_date'),
				'client_name' => $this->input->post('client_name'),
				'client_phone' => $this->input->post('client_phone'),
				'address' => $this->input->post('address'),
				'pin_code' => $this->input->post('pin_code'),
				'service_engineer' => $this->input->post('service_engineer'),
				'region' => $this->input->post('region'),
				'LRO' => $this->input->post('LRO'),
				'outsourced' => $this->input->post('outsourced'),
				'dealer_name' => $this->input->post('dealer_name'),
				'dealer_price' => $this->input->post('dealer_price'),
				'dealer_contact_no' => $this->input->post('dealer_contact_no'),
				'product' => $this->input->post('product'),
				'product_serial_no' => $this->input->post('product_serial_no'),
				'service_tag' => $this->input->post('service_tag'),
				'complain_closed' => $this->input->post('complain_closed'),
                'created_by' => $username,
                'complain_closed_date' => $this->input->post('complain_closed_date'),
                'complain_text' => $this->input->post('complain_text'),
                'work_done_till_date' => $this->input->post('work_done_till_date'),
                'solution' => $this->input->post('solution'),
            );

            $complaints_id = $this->complaints_model->add_complaints($params);
                        
            /*$it=$this->input->post('items');
            print_r($it);*/
			if( $complaints_id>0){
             $this->session->set_flashdata('response',"Complaint Added Successfully");  
             redirect('complaints/index');
            }
            
            else{
                $this->session->set_flashdata('response',"complaints Error");  
              echo '0'; 
            }
            //redirect('complaints/index');
            
        }
        else
        {       
                 
             $data['lastcomplaints'] =$this->complaints_model->get_last_complaints();
            $data['_view'] = 'complaints/add';
            $this->load->view('layouts/main',$data);
        }

        }else{
            redirect('admin/'); 
        }
        
    }  



    /*
     * Adding a complaints approval
     */
    function complaintsApprovalAdd()
    {   
        if($this->isUserLoggedIn){ 

        if(isset($_POST) && count($_POST) > 0)     
        {   

            $payment_for=$this->input->post('payment_for');
            if($payment_for == "Tax Invoice"){

                $params = array(
                
                    'approval_status' => $this->input->post('approval_status'),
                    'approval_date' => $this->input->post('approval_date'),
                    'customer_remarks' => $this->input->post('customer_remarks'),
                    'payment_for' => $this->input->post('payment_for'),
                    'approval_amount' => $this->input->post('approval_amount'),
                    'advance_payment' => $this->input->post('approval_amount'),
                    'due_payment' => $this->input->post('due_payment'),
                    'payment_mode' => $this->input->post('payment_mode'),
                    'transaction_details' => $this->input->post('transaction_details'),
                    'invoice_generated' => 'yes'
                );
            
                $complaints_no = $this->input->post('complaints_no');
                $complaints_id = $this->complaints_model->add_complaints_approval($complaints_no,$params);

                /* Add tax Invoice*/
                $username = $this->session->userdata('username');
                $new_invoice_no="";
                 $last_inv_no['invoice_no']  = $this->complaints_model->get_last_invoice_no();
                if($last_inv_no['invoice_no']){
                    $invoice_no= $last_inv_no['invoice_no'] ;
                    
                    preg_match_all('!\d!',$invoice_no,$matches);
                    $num=(int)implode('',$matches[0]);
                    $num1=$num+1;
                    $new_invoice_no='LSCINV_RAN'.$num1;
                }
                else{
                    $new_invoice_no='LSCINV_RAN1';
                }
				
				$last_trans_no['transaction_no'] = $this->complaints_model->get_last_trans_no();

                if($last_trans_no['transaction_no']){
                    $trans_no=$last_trans_no['transaction_no'];
                    
                    preg_match_all('/([0-9]+)/',$trans_no,$matches);
                    $num=(int)implode('',$matches[1]);
                    $num1=$num+1;
                    $new_trans_no='LSC_TRAN'.$num1;
                }
                else{
                    $new_trans_no='LSC_TRAN1';
                }
				
                $tax_invoice = array(
                    'invoice_no' =>  $new_invoice_no,
                    'invoice_date' => $this->input->post('approval_date'),
                    'complaints_no' => $this->input->post('complaints_no'),
                    'created_by' => $username,
                    'total_payment' => $this->input->post('approval_amount'),
                    'any_advance' => "no",
					'transaction_no'=>$new_trans_no
                );
            
                $invoice_id = $this->complaints_model->add_invoice($tax_invoice);

                if( $invoice_id>0){
                     $this->session->set_flashdata('response',"complaints Approved & Tax Invoice generated Successfully");
                    echo '1';
                }
                else{
                    $this->session->set_flashdata('response',"Error: complaints Not Approved ");
                    echo '0';
                }
            }

            else{

                $params = array(
                
                    'approval_status' => $this->input->post('approval_status'),
                    'approval_date' => $this->input->post('approval_date'),
                    'customer_remarks' => $this->input->post('customer_remarks'),
                    'payment_for' => $this->input->post('payment_for'),
                    'approval_amount' => $this->input->post('approval_amount'),
                    'advance_payment' => $this->input->post('approval_amount'),
                    'due_payment' => $this->input->post('due_payment'),
                    'payment_mode' => $this->input->post('payment_mode'),
                    'transaction_details' => $this->input->post('transaction_details')
                );
            
                $complaints_no = $this->input->post('complaints_no');
                $complaints_id = $this->complaints_model->add_complaints_approval($complaints_no,$params);

                if($complaints_id>0){
                     $this->session->set_flashdata('response',"complaints Approved Successfully");
                    echo '1';
                }
                else{
                    $this->session->set_flashdata('response',"Error: complaints Approval Not Saved");
                    echo '0';
                }
            }

            
           
        }
        else
        {       
            $data['complaints_no'] =$this->complaints_model->get_complaints_no();     
            $data['_view'] = 'complaints/addApproval';
            $this->load->view('layouts/main',$data);
        }
        }else{
            redirect('admin/'); 
        }
        
    }



    /*
     * Update complaints approval
     */
    function complaintsApprovalUpdate()
    {   
        if($this->isUserLoggedIn){ 

        if(isset($_POST) && count($_POST) > 0)     
        {   

            $params = array(
                
                'approval_status' => $this->input->post('approval_status'),
                'approval_date' => $this->input->post('approval_date'),
                'customer_remarks' => $this->input->post('customer_remarks'),
                'payment_for' => $this->input->post('payment_for'),
                'approval_amount' => $this->input->post('approval_amount'),
                'advance_payment' => $this->input->post('approval_amount'),
                'due_payment' => $this->input->post('due_payment'),
                'payment_mode' => $this->input->post('payment_mode'),
                'transaction_details' => $this->input->post('transaction_details')
            );
        
            $complaints_no = $this->input->post('complaints_no');
            $complaints_id = $this->complaints_model->update_complaints_approval($complaints_no,$params);

            if($complaints_id>0){
                 $this->session->set_flashdata('response',"complaints Updated Successfully");
                echo '1';
            }
            else{
                $this->session->set_flashdata('response',"Error: complaints  Not Updated");
                echo '0';
            }
           
        }
        else
        {       
            $data['complaints_no'] =$this->complaints_model->get_complaints_no();     
            $data['_view'] = 'complaints/addApproval';
            $this->load->view('layouts/main',$data);
        }
        }else{
            redirect('admin/'); 
        }
        
    } 
    

    /*
     * Editing a complaints
     */
    function edit($id)
    {   
        if($this->isUserLoggedIn){ 


        // check if the complaints exists before trying to edit it
        $data['complaints'] = $this->complaints_model->get_complaints($id);
        // $data['item'] = $this->complaints_model->get_items($id);

        $username = $this->session->userdata('username');
       
       if(isset($data['complaints']['id']))
       {
           if(isset($_POST) && count($_POST) > 0)   
           {   
               $params = array(
                'complaint_no' => $this->input->post('complaint_no'),
				'complain_entry_date' => $this->input->post('complain_entry_date'),
				'client_name' => $this->input->post('client_name'),
				'client_phone' => $this->input->post('client_phone'),
				'address' => $this->input->post('address'),
				'pin_code' => $this->input->post('pin_code'),
				'service_engineer' => $this->input->post('service_engineer'),
				'region' => $this->input->post('region'),
				'LRO' => $this->input->post('LRO'),
				'outsourced' => $this->input->post('outsourced'),
				'dealer_name' => $this->input->post('dealer_name'),
				'dealer_price' => $this->input->post('dealer_price'),
				'dealer_contact_no' => $this->input->post('dealer_contact_no'),
				'product' => $this->input->post('product'),
				'product_serial_no' => $this->input->post('product_serial_no'),
				'service_tag' => $this->input->post('service_tag'),
				'complain_closed' => $this->input->post('complain_closed'),
                'created_by' => $username,
                'complain_closed_date' => $this->input->post('complain_closed_date'),
                'complain_text' => $this->input->post('complain_text'),
                'work_done_till_date' => $this->input->post('work_done_till_date'),
                'solution' => $this->input->post('solution'),
                'updated_by' => $username
               );

               $complaints_id = $this->complaints_model->update_complaints($this->input->post('id'),$params);
            //    $it=$this->input->post('items');
           
            //    foreach ($it as $item){
            //       $items = array(
            //        'sl_no' => $item["SL"],
            //        'hsn_sac' => $item["HSN/SAC"],
            //        'goods_service_desc' => $item["DescriptionofGoods/Services"],
            //        'qty' => $item["Quantity"],
            //        'unit_price' => $item["UnitPrice"],
            //        'cgst' => $item["CGST"],
            //        'cgst_value' => $item["CGSTValue"],
            //        'sgst' => $item["SGST"],
            //        'sgst_value' => $item["SGSTValue"],
            //        'total' => $item["Total"]
            //        );

            //        $item_id = $this->complaints_model->update_item($this->input->post('complaints_no'),$items);
            //    }

               
               if( $complaints_id>0){
                   $this->session->set_flashdata('response',"Complaints Updated Successfully");
                   redirect("admin/complaints/index");
               }
               else{
                   $this->session->set_flashdata('response',"Error: Complaints Not Updated");
                   redirect("admin/complaints/index");
               }
               
           }
           else
           {
               $data['_view'] = 'complaints/edit';
               $this->load->view('layouts/main',$data);
           }
       }
       else{
           show_error('The complaints you are trying to edit does not exist.');
       }
        }else{
            redirect('admin/'); 
        }
            
    } 




    /*
     * Editing a complaints Approval
     */
    function editApproval($id)
    {   
        if($this->isUserLoggedIn){ 

        // check if the complaints exists before trying to edit it
        $data['complaints'] = $this->complaints_model->get_complaints($id);
        $data['item'] = $this->complaints_model->get_items($id);
        
        if(isset($data['complaints']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
                    'company_gst' => $this->input->post('company_gst'),
                    'ref_no' => $this->input->post('ref_no'),
                    'quote_date' => $this->input->post('quote_date'),
                    'complaints_no' => $this->input->post('complaints_no'),
                    'case_id' => $this->input->post('case_id'),
                    'make_model' => $this->input->post('make_model'),
                    'sl_no' => $this->input->post('sl_no'),
                    'product_no' => $this->input->post('product_no'),
                    'description' => $this->input->post('description'),
                    'place_of_supply' => $this->input->post('place_of_supply'),
                    'state_code' => $this->input->post('state_code'),
                    'customer_name' => $this->input->post('customer_name'),
                    'bill_address' => $this->input->post('bill_address'),
                    'delivery_address' => $this->input->post('delivery_address'),
                    'contact_person_name' => $this->input->post('contact_person_name'),
                    'email' => $this->input->post('email'),
                    'mob_no' => $this->input->post('mob_no'),
                    'customer_gst' => $this->input->post('customer_gst'),
                    'approval_status' => $this->input->post('approval_status'),
                    'approval_date' => $this->input->post('approval_date'),
                    'customer_remarks' => $this->input->post('customer_remarks'),
                );

                $this->complaints_model->update_complaints_approval($id,$params);            
                redirect('admin/complaints/addApproval');
            }
            else
            {

                $data['_view'] = 'complaints/editApproval';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The complaints you are trying to edit does not exist.');
        }else{
            redirect('admin/'); 
        }
        
    } 

    /*
     * Deleting complaints
     */
    function remove($id)
    {
        if($this->isUserLoggedIn){ 
            $complaints = $this->complaints_model->get_complaints($id);

        // check if the complaints exists before trying to delete it
        if(isset($complaints['id']))
        {
            $this->complaints_model->delete_complaints($id);
            redirect('admin/complaints/index');
        }
        else
            show_error('The complaints you are trying to delete does not exist.');
        }else{
            redirect('admin/'); 
        }
        
        
    }
    
}
