<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Quotation extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Quotation_model');
        $this->load->library('session');
        $this->isUserLoggedIn = $this->session->userdata('isUserLoggedIn');
    } 

    /*
     * Listing of quotation
     */

    function index()
    {
        if($this->isUserLoggedIn){ 
            $data['quotation'] = $this->Quotation_model->get_all_quotation();        
            $data['_view'] = 'quotation/index';
            $this->load->view('layouts/main',$data);
        }else{
            redirect('admin/login/index'); 
        }

        
    }

    function printQuotation($quotation_no)
    {
        if($this->isUserLoggedIn){ 
            $data['quotation'] = $this->Quotation_model->get_quotation_print($quotation_no);
            $data['item'] = $this->Quotation_model->get_item_print($quotation_no);
            $data['_view'] = 'quotation/printQuotation';
            $this->load->view('layouts/mainprint',$data);
        }else{
            redirect('admin/login/index'); 
        }

        
    }

    function printQuotationApproval($quotation_no)
    {
        if($this->isUserLoggedIn){ 
            $data['quotation'] = $this->Quotation_model->get_quotation_Approval_print($quotation_no);
         $data['item'] = $this->Quotation_model->get_item_print($quotation_no);
        $data['_view'] = 'quotation/printQuotationApproval';
        $this->load->view('layouts/mainprint',$data);
        }else{
            redirect('admin/login/index'); 
        }
        
    }

    function quotationApprovalList()
    {
        if($this->isUserLoggedIn){ 
            $data['quotation'] = $this->Quotation_model->get_approved_quotation();
        
        $data['_view'] = 'quotation/approvalList';
        $this->load->view('layouts/main',$data);
        }else{
            redirect('admin/login/index'); 
        }
        
    }



    /* 
     * Adding a new quotation
     */

   /* function addQuotation(){

       $postData = $this->input->post("company_gst");
        


    }*/
    function add()
    {   
        if($this->isUserLoggedIn){ 

        $approval_status="";
        $approval_date="";
        $customer_remarks="";
        $username = $this->session->userdata('username');
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'company_gst' => $this->input->post('company_gst'),
				'ref_no' => $this->input->post('ref_no'),
				'quote_date' => $this->input->post('quote_date'),
				'quotation_no' => $this->input->post('quotation_no'),
				'case_id' => $this->input->post('case_id'),
				'make_model' => $this->input->post('make_model'),
				'sl_no' => $this->input->post('sl_no'),
				'product_no' => $this->input->post('product_no'),
				'description' => $this->input->post('description'),
				'place_of_supply' => $this->input->post('place_of_supply'),
				'state_code' => $this->input->post('state_code'),
				'customer_name' => $this->input->post('customer_name'),
				'bill_address' => $this->input->post('bill_address'),
				'delivery_address' => $this->input->post('delivery_address'),
				'contact_person_name' => $this->input->post('contact_person_name'),
				'email' => $this->input->post('email'),
				'mob_no' => $this->input->post('mob_no'),
				'customer_gst' => $this->input->post('customer_gst'),
                'created_by' => $username,
                'quotation_amount' => $this->input->post('quotation_amount'),
				'approval_status' => $approval_status,
				'approval_date' => $approval_date,
				'customer_remarks' => $customer_remarks,
                'invoice_generated' => "",
            );

            $quotation_id = $this->Quotation_model->add_quotation($params);
            $it=$this->input->post('items');
            
			$item_id=0;
            foreach ($it as $item){
               $items = array(
                'quotation_no' => $this->input->post('quotation_no'),
                'sl_no' => $item["SL"],
                'hsn_sac' => $item["HSN/SAC"],
                'goods_service_desc' => $item["DescriptionofGoods/Services"],
                'qty' => $item["Quantity"],
                'unit_price' => $item["UnitPrice"],
                'cgst' => $item["CGST"],
                'cgst_value' => $item["CGSTValue"],
                'sgst' => $item["SGST"],
                'sgst_value' => $item["SGSTValue"],
                'total' => $item["Total"]
                );

                $item_id = $this->Quotation_model->add_items($items);
                //echo  $items;
            }

            
            
            /*$it=$this->input->post('items');
            print_r($it);*/
			if( $quotation_id>0 &&  $item_id>0){
             $this->session->set_flashdata('response',"Quotation Created Successfully");  
              echo '1'; 
            }
            
            else{
                $this->session->set_flashdata('response',"Quotation Error");  
              echo '0'; 
            }
            //redirect('quotation/index');
            
        }
        else
        {       
                 
             $data['lastquotation'] =$this->Quotation_model->get_last_quotation();
            $data['_view'] = 'quotation/add';
            $this->load->view('layouts/main',$data);
        }

        }else{
            redirect('admin/login/index'); 
        }
        
    }  



    /*
     * Adding a quotation approval
     */
    function quotationApprovalAdd()
    {   
        if($this->isUserLoggedIn){ 

        if(isset($_POST) && count($_POST) > 0)     
        {   

            $payment_for=$this->input->post('payment_for');
            if($payment_for == "Tax Invoice"){

                $params = array(
                
                    'approval_status' => $this->input->post('approval_status'),
                    'approval_date' => $this->input->post('approval_date'),
                    'customer_remarks' => $this->input->post('customer_remarks'),
                    'payment_for' => $this->input->post('payment_for'),
                    'approval_amount' => $this->input->post('approval_amount'),
                    'advance_payment' => $this->input->post('approval_amount'),
                    'due_payment' => $this->input->post('due_payment'),
                    'payment_mode' => $this->input->post('payment_mode'),
                    'transaction_details' => $this->input->post('transaction_details'),
                    'invoice_generated' => 'yes'
                );
            
                $quotation_no = $this->input->post('quotation_no');
                $quotation_id = $this->Quotation_model->add_quotation_approval($quotation_no,$params);

                /* Add tax Invoice*/
                $username = $this->session->userdata('username');
                $new_invoice_no="";
                 $last_inv_no['invoice_no']  = $this->Quotation_model->get_last_invoice_no();
                if($last_inv_no['invoice_no']){
                    $invoice_no= $last_inv_no['invoice_no'] ;
                    
                    preg_match_all('!\d!',$invoice_no,$matches);
                    $num=(int)implode('',$matches[0]);
                    $num1=$num+1;
                    $new_invoice_no='LSCINV_RAN'.$num1;
                }
                else{
                    $new_invoice_no='LSCINV_RAN1';
                }
				
				$last_trans_no['transaction_no'] = $this->Quotation_model->get_last_trans_no();

                if($last_trans_no['transaction_no']){
                    $trans_no=$last_trans_no['transaction_no'];
                    
                    preg_match_all('/([0-9]+)/',$trans_no,$matches);
                    $num=(int)implode('',$matches[1]);
                    $num1=$num+1;
                    $new_trans_no='LSC_TRAN'.$num1;
                }
                else{
                    $new_trans_no='LSC_TRAN1';
                }
				
                $tax_invoice = array(
                    'invoice_no' =>  $new_invoice_no,
                    'invoice_date' => $this->input->post('approval_date'),
                    'quotation_no' => $this->input->post('quotation_no'),
                    'created_by' => $username,
                    'total_payment' => $this->input->post('approval_amount'),
                    'any_advance' => "no",
					'transaction_no'=>$new_trans_no
                );
            
                $invoice_id = $this->Quotation_model->add_invoice($tax_invoice);

                if( $invoice_id>0){
                     $this->session->set_flashdata('response',"Quotation Approved & Tax Invoice generated Successfully");
                    echo '1';
                }
                else{
                    $this->session->set_flashdata('response',"Error: Quotation Not Approved ");
                    echo '0';
                }
            }

            else{

                $params = array(
                
                    'approval_status' => $this->input->post('approval_status'),
                    'approval_date' => $this->input->post('approval_date'),
                    'customer_remarks' => $this->input->post('customer_remarks'),
                    'payment_for' => $this->input->post('payment_for'),
                    'approval_amount' => $this->input->post('approval_amount'),
                    'advance_payment' => $this->input->post('approval_amount'),
                    'due_payment' => $this->input->post('due_payment'),
                    'payment_mode' => $this->input->post('payment_mode'),
                    'transaction_details' => $this->input->post('transaction_details')
                );
            
                $quotation_no = $this->input->post('quotation_no');
                $quotation_id = $this->Quotation_model->add_quotation_approval($quotation_no,$params);

                if($quotation_id>0){
                     $this->session->set_flashdata('response',"Quotation Approved Successfully");
                    echo '1';
                }
                else{
                    $this->session->set_flashdata('response',"Error: Quotation Approval Not Saved");
                    echo '0';
                }
            }

            
           
        }
        else
        {       
            $data['quotation_no'] =$this->Quotation_model->get_quotation_no();     
            $data['_view'] = 'quotation/addApproval';
            $this->load->view('layouts/main',$data);
        }
        }else{
            redirect('admin/login/index'); 
        }
        
    }



    /*
     * Update Quotation approval
     */
    function quotationApprovalUpdate()
    {   
        if($this->isUserLoggedIn){ 

        if(isset($_POST) && count($_POST) > 0)     
        {   

            $params = array(
                
                'approval_status' => $this->input->post('approval_status'),
                'approval_date' => $this->input->post('approval_date'),
                'customer_remarks' => $this->input->post('customer_remarks'),
                'payment_for' => $this->input->post('payment_for'),
                'approval_amount' => $this->input->post('approval_amount'),
                'advance_payment' => $this->input->post('approval_amount'),
                'due_payment' => $this->input->post('due_payment'),
                'payment_mode' => $this->input->post('payment_mode'),
                'transaction_details' => $this->input->post('transaction_details')
            );
        
            $quotation_no = $this->input->post('quotation_no');
            $quotation_id = $this->Quotation_model->update_quotation_approval($quotation_no,$params);

            if($quotation_id>0){
                 $this->session->set_flashdata('response',"Quotation Updated Successfully");
                echo '1';
            }
            else{
                $this->session->set_flashdata('response',"Error: Quotation  Not Updated");
                echo '0';
            }
           
        }
        else
        {       
            $data['quotation_no'] =$this->Quotation_model->get_quotation_no();     
            $data['_view'] = 'quotation/addApproval';
            $this->load->view('layouts/main',$data);
        }
        }else{
            redirect('admin/login/index'); 
        }
        
    } 
    

    /*
     * Editing a quotation
     */
    function edit($id)
    {   
        if($this->isUserLoggedIn){ 


        // check if the quotation exists before trying to edit it
        $data['quotation'] = $this->Quotation_model->get_quotation($id);
        $data['item'] = $this->Quotation_model->get_items($id);

        $username = $this->session->userdata('username');
       
       if(isset($data['quotation']['id']))
       {
           if(isset($_POST) && count($_POST) > 0)     
           {   
               $params = array(
                   'company_gst' => $this->input->post('company_gst'),
                   'ref_no' => $this->input->post('ref_no'),
                   'quote_date' => $this->input->post('quote_date'),
                   'case_id' => $this->input->post('case_id'),
                   'make_model' => $this->input->post('make_model'),
                   'sl_no' => $this->input->post('sl_no'),
                   'product_no' => $this->input->post('product_no'),
                   'description' => $this->input->post('description'),
                   'place_of_supply' => $this->input->post('place_of_supply'),
                   'state_code' => $this->input->post('state_code'),
                   'customer_name' => $this->input->post('customer_name'),
                   'bill_address' => $this->input->post('bill_address'),
                   'delivery_address' => $this->input->post('delivery_address'),
                   'contact_person_name' => $this->input->post('contact_person_name'),
                   'email' => $this->input->post('email'),
                   'mob_no' => $this->input->post('mob_no'),
                   'customer_gst' => $this->input->post('customer_gst'),
                    'created_by' => $username
               );

               $quotation_id = $this->Quotation_model->update_quotation($this->input->post('quotation_no'),$params);
               $it=$this->input->post('items');
           
               foreach ($it as $item){
                  $items = array(
                   'sl_no' => $item["SL"],
                   'hsn_sac' => $item["HSN/SAC"],
                   'goods_service_desc' => $item["DescriptionofGoods/Services"],
                   'qty' => $item["Quantity"],
                   'unit_price' => $item["UnitPrice"],
                   'cgst' => $item["CGST"],
                   'cgst_value' => $item["CGSTValue"],
                   'sgst' => $item["SGST"],
                   'sgst_value' => $item["SGSTValue"],
                   'total' => $item["Total"]
                   );

                   $item_id = $this->Quotation_model->update_item($this->input->post('quotation_no'),$items);
               }

               
               if( $quotation_id>0 &&  $item_id >0){
                   $this->session->set_flashdata('response',"Quotation Updated Successfully");
                   echo '1';
               }
               else{
                   $this->session->set_flashdata('response',"Error: Quotation Not Updated");
                   echo '0'; 
               }
               
           }
           else
           {
               $data['_view'] = 'quotation/edit';
               $this->load->view('layouts/main',$data);
           }
       }
       else{
           show_error('The quotation you are trying to edit does not exist.');
       }
        }else{
            redirect('admin/login/index'); 
        }
            
    } 




    /*
     * Editing a quotation Approval
     */
    function editApproval($id)
    {   
        if($this->isUserLoggedIn){ 

        // check if the quotation exists before trying to edit it
        $data['quotation'] = $this->Quotation_model->get_quotation($id);
        $data['item'] = $this->Quotation_model->get_items($id);
        
        if(isset($data['quotation']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
                    'company_gst' => $this->input->post('company_gst'),
                    'ref_no' => $this->input->post('ref_no'),
                    'quote_date' => $this->input->post('quote_date'),
                    'quotation_no' => $this->input->post('quotation_no'),
                    'case_id' => $this->input->post('case_id'),
                    'make_model' => $this->input->post('make_model'),
                    'sl_no' => $this->input->post('sl_no'),
                    'product_no' => $this->input->post('product_no'),
                    'description' => $this->input->post('description'),
                    'place_of_supply' => $this->input->post('place_of_supply'),
                    'state_code' => $this->input->post('state_code'),
                    'customer_name' => $this->input->post('customer_name'),
                    'bill_address' => $this->input->post('bill_address'),
                    'delivery_address' => $this->input->post('delivery_address'),
                    'contact_person_name' => $this->input->post('contact_person_name'),
                    'email' => $this->input->post('email'),
                    'mob_no' => $this->input->post('mob_no'),
                    'customer_gst' => $this->input->post('customer_gst'),
                    'approval_status' => $this->input->post('approval_status'),
                    'approval_date' => $this->input->post('approval_date'),
                    'customer_remarks' => $this->input->post('customer_remarks'),
                );

                $this->Quotation_model->update_quotation_approval($id,$params);            
                redirect('admin/quotation/addApproval');
            }
            else
            {

                $data['_view'] = 'quotation/editApproval';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The quotation you are trying to edit does not exist.');
        }else{
            redirect('admin/login/index'); 
        }
        
    } 

    /*
     * Deleting quotation
     */
    function remove($id)
    {
        if($this->isUserLoggedIn){ 
            $quotation = $this->Quotation_model->get_quotation($id);

        // check if the quotation exists before trying to delete it
        if(isset($quotation['id']))
        {
            $this->Quotation_model->delete_quotation($id);
            redirect('admin/quotation/index');
        }
        else
            show_error('The quotation you are trying to delete does not exist.');
        }else{
            redirect('admin/login/index'); 
        }
        
        
    }
    
}
